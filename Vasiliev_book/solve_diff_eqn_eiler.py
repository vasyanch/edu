'''
    Данный код реализует численное решение дифф-го уравнения
    первого порядка y'(x) = f(x, y(x)) c нач. уловием yo = y(x0)
    (зад. Коши) и сравнивает его с аналитическим решением для
    частного случая f(x, y(x)) = 2*x - y.
    Для реш. урав. используется наиболее простая схема Эйлера.
     Интервал значений аргумента от x0 до x(точка, в которой необх.
     вычислить значение фун. y(x)) разбивается на n один. отрезков dx.
     Значение фун. y последовательно вычисляется в узловых точках
     x_k = x0 + k*dx,  где k = 1,..n, x_n == x, согласно формуле
     y_k = y_k-1 + dx*f(x_k-1, y_k-1). Таким образом зная начальное
     условие y0 = y(x0) мы можем найти значение фун. y в заданом x.
'''
import math


def solve_deqn(f, x0, y0, x):
    n = 1000
    dx = (x - x0)/1000
    x = x0
    y = y0
    for k in range(1, n+1):
        y = y + dx*f(x,y)
        x += dx
    return y


def diff_enq(x, y):
    return 2*x - y


def y(x):
    '''
    Фун. точного аналитического решения
    '''
    return 2*(x - 1) + 5*math.exp(-x)

h = 0.5 
for k in range(6):
    x = k*h
    print('Числовое решение:')
    print('x =', x, '-> y(x) =',solve_deqn(diff_enq, 0, 3, x))
    print('Аналитическое решение:')
    print('x =', x, '-> y(x) =', y(x))

